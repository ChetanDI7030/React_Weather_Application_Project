{"version":3,"file":"static/js/2054.bb1e2495.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/label/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/label/label.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/label/label.scss?tag=calcite-label&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/label.ts"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  associateExplicitLabelToUnlabeledComponent,\n  labelConnectedEvent,\n  labelDisconnectedEvent,\n} from \"../../utils/label\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text and a component that can be labeled.\n */\n@Component({\n  tag: \"calcite-label\",\n  styleUrl: \"label.scss\",\n  shadow: true,\n})\nexport class Label {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the `id` of the component the label is bound to. Use when the component the label is bound to does not reside within the component. */\n  @Prop({ reflect: true }) for: string;\n\n  @Watch(\"for\")\n  handleForChange(): void {\n    associateExplicitLabelToUnlabeledComponent(this.el);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Defines the layout of the label in relation to the component. Use `\"inline\"` positions to wrap the label and component on the same line. */\n  @Prop({ reflect: true }) layout: \"inline\" | \"inline-space-between\" | \"default\" = \"default\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ bubbles: false, cancelable: false }) calciteInternalLabelClick: EventEmitter<{\n    sourceEvent: MouseEvent;\n  }>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLabelElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  labelClickHandler = (event: MouseEvent): void => {\n    this.calciteInternalLabelClick.emit({\n      sourceEvent: event,\n    });\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    document.dispatchEvent(new CustomEvent(labelConnectedEvent));\n  }\n\n  disconnectedCallback(): void {\n    document.dispatchEvent(new CustomEvent(labelDisconnectedEvent));\n  }\n\n  render(): VNode {\n    return (\n      <Host onClick={this.labelClickHandler}>\n        <div class={CSS.container}>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-label-margin-bottom: The spacing below the component.\n */\n\n:host {\n  @apply flex;\n}\n\n:host([alignment=\"start\"]) {\n  text-align: start;\n}\n\n:host([alignment=\"end\"]) {\n  text-align: end;\n}\n\n:host([alignment=\"center\"]) {\n  @apply text-center;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply text-n2h gap-1;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.2\"));\n  }\n}\n:host([scale=\"m\"]) {\n  .container {\n    @apply text-n1h gap-2;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.3\"));\n  }\n}\n:host([scale=\"l\"]) {\n  .container {\n    @apply text-0h gap-2;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.4\"));\n  }\n}\n\n:host .container {\n  @apply text-color-1\n    mt-0\n    mx-0\n    w-full\n    leading-snug;\n}\n\n:host([layout=\"default\"]) {\n  .container {\n    @apply flex flex-col;\n  }\n}\n\n:host([layout=\"inline\"]),\n:host([layout=\"inline-space-between\"]) {\n  .container {\n    @apply flex flex-row items-center gap-2;\n  }\n}\n:host([layout=\"inline\"][scale=\"l\"]) {\n  .container {\n    @apply gap-3;\n  }\n}\n\n:host([layout=\"inline-space-between\"]) {\n  .container {\n    @apply justify-between;\n  }\n}\n\n@include disabled() {\n  & > .container {\n    @apply opacity-disabled;\n  }\n\n  // prevent opacity stacking with already disabled child elements\n  ::slotted(*[disabled]),\n  ::slotted(*[disabled] *) {\n    @apply bg-opacity-100;\n  }\n  ::slotted(calcite-input-message:not([active])) {\n    @apply bg-opacity-0;\n  }\n}\n\n@include base-component();\n","import { Build, forceUpdate as stencilForceUpdate } from \"@stencil/core\";\nimport { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport const forceUpdate = Build.isTesting\n  ? stencilForceUpdate\n  : () => {\n      /* noop */\n    };\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param el the component's host element\n * @returns Promise<void>\n */\nexport async function componentFocusable(el: HTMLElement): Promise<void> {\n  await componentOnReady(el);\n\n  if (!Build.isBrowser && !Build.isTesting) {\n    return;\n  }\n\n  forceUpdate(el);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { closestElementCrossShadowBoundary, isBefore, queryElementRoots } from \"./dom\";\nimport { componentOnReady } from \"./component\";\n\nexport interface LabelableComponent {\n  /**\n   * When true, disabled prevents interaction.\n   */\n  disabled: boolean;\n\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * Text label.\n   */\n  label?: string;\n\n  /**\n   * The label this component is associated with.\n   */\n  labelEl: HTMLCalciteLabelElement;\n\n  /**\n   * Hook for components to provide custom label click behavior.\n   */\n  onLabelClick: (event: CustomEvent<any>) => void;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const labelClickEvent = \"calciteInternalLabelClick\";\nexport const labelConnectedEvent = \"calciteInternalLabelConnected\";\nexport const labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\n\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = new WeakMap<HTMLCalciteLabelElement, LabelableComponent[]>();\nconst onLabelClickMap = new WeakMap<HTMLCalciteLabelElement, typeof onLabelClick>();\nconst onLabelConnectedMap = new WeakMap<LabelableComponent, typeof onLabelConnected>();\nconst onLabelDisconnectedMap = new WeakMap<LabelableComponent, typeof onLabelDisconnected>();\nconst unlabeledComponents = new Set<LabelableComponent>();\n\nconst findLabelForComponent = (componentEl: HTMLElement): HTMLCalciteLabelElement | null => {\n  const { id } = componentEl;\n\n  const forLabel =\n    id && (queryElementRoots(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` }) as HTMLCalciteLabelElement);\n\n  if (forLabel) {\n    return forLabel;\n  }\n\n  const parentLabel = closestElementCrossShadowBoundary<HTMLCalciteLabelElement>(componentEl, labelTagName);\n\n  if (\n    !parentLabel ||\n    // labelable components within other custom elements are not considered labelable\n    hasAncestorCustomElements(parentLabel, componentEl)\n  ) {\n    return null;\n  }\n\n  return parentLabel;\n};\n\nfunction hasAncestorCustomElements(label: HTMLCalciteLabelElement, componentEl: HTMLElement): boolean {\n  let traversedElements: HTMLElement[];\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n\n  const listener = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath() as HTMLElement[];\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n\n  const ancestorCustomElements = traversedElements\n    .filter((el) => el !== componentEl && el !== label)\n    .filter((el) => el.tagName?.includes(\"-\"));\n\n  return ancestorCustomElements.length > 0;\n}\n\n/**\n * Helper to set up label interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  const labelEl = findLabelForComponent(component.el);\n\n  if (\n    (onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||\n    (!labelEl && unlabeledComponents.has(component))\n  ) {\n    return;\n  }\n\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n\n  if (labelEl) {\n    component.labelEl = labelEl;\n\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\n/**\n * Helper to tear down label interactions on disconnectedCallback on labelable components.\n *\n * @param component\n */\nexport function disconnectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n\n  if (!component.labelEl) {\n    return;\n  }\n\n  const labelables = labelToLabelables.get(component.labelEl);\n\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder),\n  );\n\n  component.labelEl = null;\n}\n\nfunction sortByDOMOrder(a: LabelableComponent, b: LabelableComponent): number {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\n\n/**\n * Helper to get the label text from a component.\n *\n * @param component\n */\nexport function getLabelText(component: LabelableComponent): string {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\n\nfunction onLabelClick(this: HTMLCalciteLabelElement, event: CustomEvent<{ sourceEvent: MouseEvent }>): void {\n  const labelClickTarget = event.detail.sourceEvent.target as HTMLElement;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n\n  if (labelableChildClicked) {\n    // no need to forward click as labelable will receive focus\n    return;\n  }\n\n  const firstLabelable = labelables[0];\n\n  if (firstLabelable.disabled) {\n    return;\n  }\n\n  firstLabelable.onLabelClick(event);\n}\n\nfunction onLabelConnected(this: LabelableComponent): void {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\n\nfunction onLabelDisconnected(this: LabelableComponent): void {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\n\n/**\n * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.\n *\n * @param label - the label element\n */\nexport async function associateExplicitLabelToUnlabeledComponent(label: HTMLCalciteLabelElement): Promise<void> {\n  await componentOnReady(label);\n\n  const alreadyLabeled = labelToLabelables.has(label);\n\n  if (alreadyLabeled) {\n    return;\n  }\n\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n\n  if (!forComponentEl) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\n"],"names":["CSS","Label","proxyCustomElement","HTMLElement","labelClickHandler","event","this","calciteInternalLabelClick","emit","sourceEvent","handleForChange","associateExplicitLabelToUnlabeledComponent","el","connectedCallback","document","dispatchEvent","CustomEvent","labelConnectedEvent","disconnectedCallback","labelDisconnectedEvent","render","h","Host","key","onClick","class","getIconScale","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","forceUpdate","Build","isTesting","forceUpdate$1","componentFocusable","isBrowser","labelClickEvent","labelTagName","labelToLabelables","WeakMap","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","Set","findLabelForComponent","componentEl","id","forLabel","queryElementRoots","selector","concat","parentLabel","closestElementCrossShadowBoundary","label","traversedElements","customElementAncestorCheckEventType","listener","stopImmediatePropagation","composedPath","slice","indexOf","addEventListener","once","composed","bubbles","removeEventListener","ancestorCustomElements","filter","_el$tagName","tagName","includes","length","hasAncestorCustomElements","connectLabel","component","labelEl","has","boundOnLabelDisconnected","onLabelDisconnected","bind","labelables","get","push","set","sort","sortByDOMOrder","onLabelClick","delete","disconnectLabel","labelable","a","b","isBefore","getLabelText","_component$labelEl","textContent","trim","labelClickTarget","detail","target","clickedLabelable","find","firstLabelable","disabled","onLabelConnected","add","boundOnLabelConnected","_label$ownerDocument","forComponentEl","ownerDocument","getElementById","for"],"sourceRoot":""}