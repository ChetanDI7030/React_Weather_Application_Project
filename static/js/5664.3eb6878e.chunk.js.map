{"version":3,"file":"static/js/5664.3eb6878e.chunk.js","mappings":";0TAAO,MAAMA,EACJ,QADIA,EAEJ,QAFIA,EAGH,SAHGA,EAIH,SAJGA,EAKJ,QALIA,EAML,OANKA,EAOJ,QAPIA,EAQA,YARAA,EASF,UATEA,EAUA,YAVAA,EAWI,kBAXJA,EAYF,UAZEA,EAaM,qBAbNA,EAcI,iBAdJA,EAeC,cAfDA,EAgBK,mBAhBLA,EAoBE,sBApBFA,EAqBI,wBArBJA,EAsBE,sBAtBFA,EAuBI,wBAUJC,EACJ,IAGIC,EACF,UADEA,EAEI,iBAFJA,EAGC,cAHDA,EAIH,SAJGA,EAKL,OALKA,EAMA,YANAA,EAOF,UCUX,IAAIC,EAA0B,EAC1BC,EAAuC,SAkB9BC,GAAKC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,yUAgRhB,KAAAC,kBAAmB,EAQX,KAAAC,kBAAqCC,EAAAA,EAAAA,GAAe,YAAY,IACtEC,KAAKC,2BAGC,KAAAC,gBAAmCH,EAAAA,EAAAA,GAAe,YAAY,KACpEC,KAAKG,mBAAmB,IAK1B,KAAAC,mBAAqB,UA4Gb,KAAAC,gBAAmBC,IACzBN,KAAKO,aAAeD,CAAE,EA6ChB,KAAAE,QAAU,KAChBR,KAAKS,WACLT,KAAKM,GAAGI,oBAAoB,mBAAoBV,KAAKQ,QAAQ,EAGvD,KAAAG,iBAAmB,KACzBX,KAAKY,MAAO,CAAK,EAwBX,KAAAC,mBAAqB,KACvBb,KAAKc,uBAITd,KAAKY,MAAO,EAAK,EAGnB,KAAAG,WAAaC,UACX,GAAIhB,KAAKiB,YACP,UACQjB,KAAKiB,YAAYjB,KAAKM,IAC5B,MAAOY,GAOP,YALAC,uBAAsB,KACpBnB,KAAKH,kBAAmB,EACxBG,KAAKY,MAAO,EACZZ,KAAKH,kBAAmB,CAAK,IAMnCL,IACAQ,KAAKoB,QAAS,EACdpB,KAAKqB,2BAA2B,EAO1B,KAAApB,uBAAyB,KAC/BD,KAAKsB,yBACLtB,KAAKuB,yBAAyB,EAGxB,KAAAD,uBAAyB,KAC/BtB,KAAKwB,aAAcC,EAAAA,EAAAA,GAAWzB,KAAKM,GAAI,CAACf,EAAYA,EAAeA,GAAiB,EAG9E,KAAAY,kBAAoB,KAC1BH,KAAK0B,SAAWC,iBAAiB3B,KAAKM,IAAIsB,iBAAiB,yBAC3D5B,KAAK6B,UAAYF,iBAAiB3B,KAAKM,IAAIsB,iBAAiB,yBAAyB,EAG/E,KAAAE,4BAA+BC,IACrC/B,KAAKgC,eAAgBC,EAAAA,EAAAA,GAA6BF,EAAM,EAGlD,KAAAG,+BAAkCH,IACxC/B,KAAKmC,kBAAmBF,EAAAA,EAAAA,GAA6BF,EAAM,aA7fd,eAOE,oDAMF,0BAKF,6BAYG,0CAMN,aAGF,oBAGK,oLAsPxB,sBAEI,yBAEG,0DA/Q5BK,uBAAAA,CAAwBC,GACjBrC,KAAKY,OAIVyB,GAAoBC,EAAAA,EAAAA,GAAoBtC,OAAQuC,EAAAA,EAAAA,GAAkBvC,OAuCpEwC,gBAAAA,IAkBA,uBAAMC,SACEC,EAAAA,EAAAA,GAAc1C,OACpB2C,EAAAA,EAAAA,GAAuB3C,MAEnBA,KAAKY,MACPZ,KAAK4C,YAITC,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB9C,MAGrB+C,iBAAAA,GAAiB,IAAAC,EAAAC,EACM,QAArBD,EAAAhD,KAAKF,wBAAgB,IAAAkD,GAArBA,EAAuBE,QAAQlD,KAAKM,GAAI,CAAE6C,WAAW,EAAMC,SAAS,IACjD,QAAnBH,EAAAjD,KAAKE,sBAAc,IAAA+C,GAAnBA,EAAqBC,QAAQlD,KAAKM,GAAI,CAAE+C,gBAAiB,CAAC,WAC1DrD,KAAKG,oBACLH,KAAKsB,0BACLgC,EAAAA,EAAAA,GAAgCtD,OAChCuD,EAAAA,EAAAA,GAAiBvD,OACjBwD,EAAAA,EAAAA,GAAgBxD,OAChByD,EAAAA,EAAAA,GAAiBzD,MAGnB0D,oBAAAA,GAAoB,IAAAC,EAAAC,EAClB5D,KAAKqB,4BACgB,QAArBsC,EAAA3D,KAAKF,wBAAgB,IAAA6D,GAArBA,EAAuBE,aACJ,QAAnBD,EAAA5D,KAAKE,sBAAc,IAAA0D,GAAnBA,EAAqBC,cACrBC,EAAAA,EAAAA,GAAmC9D,OACnCsC,EAAAA,EAAAA,GAAoBtC,OACpB+D,EAAAA,EAAAA,GAAoB/D,OACpBgE,EAAAA,EAAAA,GAAmBhE,MACnBA,KAAKiE,gBAAiB,EAGxBC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAAAC,IAAA,8DACerE,KAAKsE,UAAS,kBACftE,KAAKuE,QAAO,aAClB,OACXC,KAAK,WAELL,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEI,MAAO,CACL,CAACpF,IAAgB,EACjB,CAACA,GAAoBW,KAAKoB,OAC1B,CAAC/B,GAAqBW,KAAKiE,kBAG7BE,EAAAA,EAAAA,GAAA,iBAAAE,IAAA,2CAAeI,MAAOpF,EAAWqF,QAAS1E,KAAKa,qBAC9Cb,KAAK2E,eACNR,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEI,MAAO,CACL,CAACpF,IAAY,GAEfuF,IAAK5E,KAAKK,kBAEV8D,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKI,MAAOpF,GACTW,KAAK6E,qBACNV,EAAAA,EAAAA,GAAA,UAAAE,IAAA,2CAAQI,MAAOpF,IACb8E,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMS,KAAMzF,MAGfW,KAAK+E,oBACNZ,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CACEI,MAAO,CACL,CAACpF,IAAc,EACf,CAACA,IAAuBW,KAAKwB,WAE/BoD,IAAMtE,GAAQN,KAAKgF,aAAe1E,IAElC6D,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMS,KAAMvF,KAEbS,KAAKiF,sBACLjF,KAAKkF,kBAOhBA,YAAAA,GACE,OAAOlF,KAAKwB,WACV2C,EAAAA,EAAAA,GAAA,OAAKM,MAAOpF,EAAYgF,IAAI,WAC1BF,EAAAA,EAAAA,GAAA,QAAMM,MAAOpF,IACX8E,EAAAA,EAAAA,GAAA,QAAMW,KAAMvF,MAEd4E,EAAAA,EAAAA,GAAA,QAAMM,MAAOpF,IACX8E,EAAAA,EAAAA,GAAA,QAAMW,KAAMvF,MAEd4E,EAAAA,EAAAA,GAAA,QAAMM,MAAOpF,IACX8E,EAAAA,EAAAA,GAAA,QAAMW,KAAMvF,MAGd,KAGNwF,gBAAAA,GACE,OACEZ,EAAAA,EAAAA,GAAA,OAAKM,MAAOpF,EAAgB8F,QAASnF,KAAKgC,gBACxCmC,EAAAA,EAAAA,GAAA,QAAMW,KAAMvF,EAAkB6F,aAAcpF,KAAK8B,+BAKvDmD,mBAAAA,GACE,OACEd,EAAAA,EAAAA,GAAA,OAAKM,MAAOpF,EAAmB8F,QAASnF,KAAKmC,mBAC3CgC,EAAAA,EAAAA,GAAA,QAAMW,KAAMvF,EAAqB6F,aAAcpF,KAAKkC,kCAK1D2C,iBAAAA,GACE,OAAQ7E,KAAKqF,oBAWT,MAVFlB,EAAAA,EAAAA,GAAA,uBACcnE,KAAKsF,SAASC,MAC1Bd,MAAOpF,EACPgF,IAAI,SACJK,QAAS1E,KAAKW,iBACdiE,IAAMtE,GAAQN,KAAKwF,cAAgBlF,EACnCmF,MAAOzF,KAAKsF,SAASC,QAErBpB,EAAAA,EAAAA,GAAA,gBAAcuB,KAAMpG,EAAaqG,OAAOC,EAAAA,EAAAA,GAAa5F,KAAK2F,UAKhEhB,WAAAA,GACE,IAAK3E,KAAK6F,aAAe7F,KAAK0B,UAAY1B,KAAK6B,WAC7C,OACEsC,EAAAA,EAAAA,GAAA,iBAAA2B,OACOzG,EAAa,sBAAAyG,OACZ9F,KAAK+F,QAAU/F,KAAK0B,SAAW,kCAAoC,GAAE,kCAAAoE,OAEtEzG,EAAS,kCAAAyG,OACI9F,KAAK6B,UAAY7B,KAAK6B,UAAY,OAAM,gCAAAiE,OACpD9F,KAAK0B,SAAW,gBAAHoE,OAAmB9F,KAAK0B,SAAQ,gBAAiB,GAAE,oBAAAoE,OAChE9F,KAAK0B,SAAW,oBAAHoE,OAAuB9F,KAAK0B,SAAQ,gBAAiB,GAAE,oBAAAoE,OACpE9F,KAAK+F,OAAS,0DAA4D,GAAE,+DAAAD,OAEhD9F,KAAK0B,SAAQ,wBAAAoE,OACxCzG,EAAa,wBAAAyG,OACZ9F,KAAK+F,OAAS,oCAAsC,GAAE,sCAAAD,OAEvDzG,EAAS,sQAAAyG,OAMP9F,KAAK+F,OAA0C,GAAjC,+BAAmC,sBAAAD,OACjD9F,KAAK+F,OAA0C,GAAjC,+BAAmC,sBAAAD,OAElD9F,KAAK+F,OAAM,2FAEP,GACN,iDAwDdC,qBAAAA,IACEC,EAAAA,EAAAA,GAAejG,KAAMA,KAAKkG,iBAY5BC,YAAAA,CAAapE,IACP/B,KAAKY,MAASZ,KAAKoG,gBAAgC,WAAdrE,EAAMsC,KAAqBtC,EAAMsE,mBACxErG,KAAKY,MAAO,EACZmB,EAAMuE,kBAgCV,cAAM7F,SACE8F,EAAAA,EAAAA,GAAmBvG,OACzBwG,EAAAA,EAAAA,GAAmBxG,KAAKM,IAO1B,6BAAMiB,IACJA,EAAAA,EAAAA,GAAwBvB,MAU1B,mBAAMyG,GAA+B,IAAjBC,EAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC9B3G,KAAKgF,eACHhF,KAAKgF,aAAa+B,SACpB/G,KAAKgF,aAAa+B,SAAS,CAAEL,MAAKI,OAAME,SAAU,YAElDhH,KAAKgF,aAAaiC,UAAYP,EAC9B1G,KAAKgF,aAAakC,WAAaJ,IAerCK,YAAAA,GACEnH,KAAKO,aAAa6G,UAAUC,IAAIhI,GAChCW,KAAKsH,uBAAuBC,OAG9BC,MAAAA,GACExH,KAAKO,aAAa6G,UAAUK,OAAOpI,EAAiBA,GACpDW,KAAK0H,iBAAiBH,QACtBhF,EAAAA,EAAAA,GAAkBvC,MAGpB2H,aAAAA,GACE3H,KAAKO,aAAa6G,UAAUC,IAAIhI,GAChCW,KAAK4H,wBAAwBL,OAG/BM,OAAAA,GACE7H,KAAKO,aAAa6G,UAAUK,OAAOpI,EAAiBA,GACpDW,KAAK8H,kBAAkBP,QACvBjF,EAAAA,EAAAA,GAAoBtC,MAItB+H,WAAAA,CAAYC,GACNhI,KAAKH,mBAILmI,EACFhI,KAAK4C,YAEL5C,KAAKe,cAKTkH,kBAAAA,CAAmBD,GACjB,MAAME,EAAYF,EAAQ3I,EAAkBA,EAC5CW,KAAKO,aAAa6G,UAAUC,IAAIa,IAChCC,EAAAA,EAAAA,GAA2BnI,MAYrB,eAAM4C,SACNwF,EAAAA,EAAAA,GAAiBpI,KAAKM,IAC5BN,KAAKM,GAAG+H,iBAAiB,mBAAoBrI,KAAKQ,SAClDR,KAAKoB,QAAS,EACd,MAAMkH,GAAU7G,EAAAA,EAAAA,GAAWzB,KAAKM,GAAIf,GAC9BgJ,GAAY9G,EAAAA,EAAAA,GAAWzB,KAAKM,GAAIf,GAEtCS,KAAKuE,SAAUiE,EAAAA,EAAAA,GAASF,GACxBtI,KAAKsE,WAAYkE,EAAAA,EAAAA,GAASD,GAErBvI,KAAKiE,iBACgB,IAApBzE,IACFC,EAA+BgJ,SAASC,gBAAgBC,MAAMC,UAGhEpJ,IAEAiJ,SAASC,gBAAgBC,MAAME,YAAY,WAAY,WAgCnDxH,yBAAAA,GACNoH,SAASC,gBAAgBC,MAAME,YAAY,WAAYpJ,ySChkB1C,8xXCmBjB,IAAIK,EACJ,MAAMgJ,EAAiF,CAAE3F,WAAW,YAYpFG,EAAgCyF,GACzCjJ,IACHA,GAAmBC,EAAAA,EAAAA,GAAe,WAAYiJ,IAGhDlJ,EAAiBoD,QAAQ6F,EAAUzI,GAAIwI,EACzC,UAYgBhF,EAAmCiF,GACjDjJ,EAAiBmJ,UAAUF,EAAUzI,GACvC,CAEA,SAAS0I,EAAiBE,GACxBA,EAAUC,SAAQC,IAAW,IAAV,OAAEC,GAAQD,GAC3BE,EAAAA,EAAAA,IAAYD,EAAO,GAEvB,sEC1DA,MCSaE,GAAM5J,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,kFAQiB,+BAMM,gCAWxB,YAGD,GAQfsE,MAAAA,GACE,MAAM,GAAE5D,EAAE,OAAEkJ,EAAM,MAAEC,EAAK,MAAE9D,EAAK,KAAE+D,EAAI,KAAEC,EAAI,MAAE3B,GAAUhI,KAElD4J,EAAKtJ,EAAGsJ,KAAMC,EAAAA,EAAAA,KAEdC,EAAON,EAASxJ,KAAK+J,cAAcpE,GAAS3F,KAAKgK,QAAQrE,GACzDsE,EAFc,IAELH,EACTI,EAAU,OAAHpE,OAAUgE,EAAI,KAAAhE,OAAIgE,GACzBK,EAAyB,gBAATR,EAChBS,EAAgB,EAAIH,EAASI,KAAKC,GAClCC,EAAYvC,EAAQ,IAAOoC,EAC3BI,EAAYJ,EAAgBG,EAC5BE,EAAWJ,KAAKK,MAAM1C,GACtB2C,EAAiB,CACrB,gBAAiBF,EACjB,gBAAiB,EACjB,gBAAiB,IACjBG,SAAuB,MAAbH,GAENI,EAAgB,CAAEC,EAAGb,EAAQc,GAAIjB,EAAO,EAAGkB,GAAIlB,EAAO,GACtDmB,EAAmB,CAAE,mBAAoB,GAAFnF,OAAKyE,EAAQ,KAAAzE,OAAI0E,IAC9D,OACErG,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAAAC,IAAA,wDACSoF,EACZG,GAAIA,EACJpF,KAAK,iBACA2F,EAAgBQ,EAAiB,CAAC,IAEvCxG,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKI,MAAM,iBACTN,EAAAA,EAAAA,GAAA,OAAAE,IAAA,yDAAiB,OAAOI,MAAM,6BAA6ByG,QAAShB,IAClE/F,EAAAA,EAAAA,GAAA,UAAAE,IAAA,8CAAYwG,MAEd1G,EAAAA,EAAAA,GAAA,OAAAE,IAAA,yDAAiB,OAAOI,MAAM,6BAA6ByG,QAAShB,IAClE/F,EAAAA,EAAAA,GAAA,UAAAE,IAAA,8CAAYwG,MAEd1G,EAAAA,EAAAA,GAAA,OAAAE,IAAA,yDACc,OACZI,MAAM,6BACNyG,QAAShB,KACJC,EAAgB,CAAExB,MAAOsC,GAAqB,CAAC,IAEpD9G,EAAAA,EAAAA,GAAA,UAAAE,IAAA,8CAAYwG,MAGfnB,IAAQvF,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKI,MAAM,gBAAgBiF,GACnCS,IAAiBhG,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKI,MAAM,sBAAsBuD,IAwBjDgC,OAAAA,CAAQrE,GACd,MAAO,CACLwF,EAAG,GACHC,EAAG,GACHC,EAAG,IACH1F,GAGIoE,aAAAA,CAAcpE,GACpB,MAAO,CACLwF,EAAG,GACHC,EAAG,GACHC,EAAG,IACH1F,iDD/HY,kwMEAX,MAAMtG,EACJ,QADIA,EAEF,UAGEiM,EACR,GADQA,EAGR,ICgBQC,GAAK5L,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEAuChB,KAAA4L,gBAAiBzL,EAAAA,EAAAA,GAAe,UAAU,IAAMC,KAAKyL,iBAsE7C,KAAAC,wBAA2B3J,IACjC/B,KAAK2L,YAAaC,EAAAA,EAAAA,GAAqB7J,EAAM,EAGvC,KAAA8J,cAAiBvL,IACvBN,KAAK8L,SAAWxL,EAChBN,KAAKyL,cAAc,gBAzGc,6HAqCR,oBAOL,EA3BtBjJ,gBAAAA,IAuBAwD,qBAAAA,IACEC,EAAAA,EAAAA,GAAejG,KAAMA,KAAKkG,iBAW5BnD,iBAAAA,GAAiB,IAAAgJ,GACfxI,EAAAA,EAAAA,GAAiBvD,OACjBwD,EAAAA,EAAAA,GAAgBxD,MACG,QAAnB+L,EAAA/L,KAAKwL,sBAAc,IAAAO,GAAnBA,EAAqB7I,QAAQlD,KAAKM,IAGpC,uBAAMmC,SACEC,EAAAA,EAAAA,GAAc1C,MAGtB0D,oBAAAA,GAAoB,IAAAsI,GAClBjI,EAAAA,EAAAA,GAAoB/D,OACpBgE,EAAAA,EAAAA,GAAmBhE,MACA,QAAnBgM,EAAAhM,KAAKwL,sBAAc,IAAAQ,GAAnBA,EAAqBnI,aASvBK,MAAAA,GACE,MAAM,WAAEyH,EAAU,QAAEM,EAAO,SAAE3G,GAAatF,KAE1C,OACEmE,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKI,MAAOpF,GACT4M,GACC9H,EAAAA,EAAAA,GAAA,kBACEsF,MAAOnE,EAAS2G,QAChBrH,IAAK5E,KAAK6L,cACVlG,MAAO3F,KAAKkM,cAEZ,MACJ/H,EAAAA,EAAAA,GAAA,OAAAE,IAAA,2CAAKI,MAAOpF,EAAa8F,QAASwG,IAChCxH,EAAAA,EAAAA,GAAA,QAAAE,IAAA,2CAAMe,aAAcpF,KAAK0L,4BAqBzBS,QAAAA,CAASrC,GACf,OAAIA,EAAOwB,EACF,IACExB,GAAQwB,EACV,IAEA,IAIHG,YAAAA,GAAY,IAAAW,EAClB,MAAM,SAAEN,EAAQ,GAAExL,GAAON,KAEpB8L,IAIL9L,KAAKkM,YAAclM,KAAKmM,SAAkD,QAA1CC,EAAC/B,KAAKgC,IAAI/L,EAAGgM,aAAchM,EAAGiM,oBAAY,IAAAH,EAAAA,EAAI,yMC/JjE","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/modal/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/modal/modal.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/modal/modal.scss?tag=calcite-modal&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.scss?tag=calcite-loader&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  modal: \"modal\",\n  title: \"title\",\n  header: \"header\",\n  footer: \"footer\",\n  scrim: \"scrim\",\n  back: \"back\",\n  close: \"close\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  content: \"content\",\n  contentNoFooter: \"content--no-footer\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  slottedInShell: \"slotted-in-shell\",\n\n  // these classes help apply the animation in phases to only set transform on open/close\n  // this helps avoid a positioning issue for any floating-ui-owning children\n  openingIdle: \"modal--opening-idle\",\n  openingActive: \"modal--opening-active\",\n  closingIdle: \"modal--closing-idle\",\n  closingActive: \"modal--closing-active\",\n};\n\nexport const DURATIONS = {\n  slow: 14000,\n  medium: 10000,\n  fast: 6000,\n  test: 300 / 1000,\n};\n\nexport const ICONS = {\n  close: \"x\",\n};\n\nexport const SLOTS = {\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  back: \"back\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  ensureId,\n  focusFirstTabbable,\n  getSlotted,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { componentOnReady, getIconScale } from \"../../utils/component\";\nimport { ModalMessages } from \"./assets/modal/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlet totalOpenModals: number = 0;\nlet initialDocumentOverflowStyle: string = \"\";\n\n/**\n * @slot header - A slot for adding header text.\n * @slot content - A slot for adding the component's content.\n * @slot content-top - A slot for adding content to the component's sticky header, where content remains at the top of the component when scrolling up and down.\n * @slot content-bottom - A slot for adding content to the component's sticky footer, where content remains at the bottom of the component when scrolling up and down.\n * @slot primary - A slot for adding a primary button.\n * @slot secondary - A slot for adding a secondary button.\n * @slot back - A slot for adding a back button.\n */\n\n@Component({\n  tag: \"calcite-modal\",\n  styleUrl: \"modal.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Modal\n  implements\n    ConditionalSlotComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays and positions the component.  */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * We use an internal property to handle styles for when a modal is actually opened, not just when the open attribute is applied. This is a property because we need to apply styles to the host element and to keep the styles present while beforeClose is.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) opened = false;\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: (el: HTMLCalciteModalElement) => Promise<void>;\n\n  /** When `true`, disables the component's close button. */\n  @Prop({ reflect: true }) closeButtonDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /** When `true`, disables the closing of the component when clicked outside. */\n  @Prop({ reflect: true }) outsideCloseDisabled = false;\n\n  /** When `true`, prevents the component from expanding to the entire screen on mobile devices. */\n  @Prop({ reflect: true }) docked: boolean;\n\n  /** When `true`, disables the default close on escape behavior. */\n  @Prop({ reflect: true }) escapeDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) widthScale: Scale = \"m\";\n\n  /** Sets the component to always be fullscreen. Overrides `widthScale` and `--calcite-modal-width` / `--calcite-modal-height`. */\n  @Prop({ reflect: true }) fullscreen: boolean;\n\n  /** Specifies the kind of the component, which will apply to top border. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\", Kind>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ModalMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ModalMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) slottedInShell: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    // when modal initially renders, if active was set we need to open as watcher doesn't fire\n    if (this.open) {\n      this.openModal();\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.cssVarObserver?.observe(this.el, { attributeFilter: [\"style\"] });\n    this.updateSizeCssVars();\n    this.updateFooterVisibility();\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n  }\n\n  disconnectedCallback(): void {\n    this.removeOverflowHiddenClass();\n    this.mutationObserver?.disconnect();\n    this.cssVarObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    deactivateFocusTrap(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.slottedInShell = false;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-describedby={this.contentId}\n        aria-labelledby={this.titleId}\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerOpen]: this.opened,\n            [CSS.slottedInShell]: this.slottedInShell,\n          }}\n        >\n          <calcite-scrim class={CSS.scrim} onClick={this.handleOutsideClose} />\n          {this.renderStyle()}\n          <div\n            class={{\n              [CSS.modal]: true,\n            }}\n            ref={this.setTransitionEl}\n          >\n            <div class={CSS.header}>\n              {this.renderCloseButton()}\n              <header class={CSS.title}>\n                <slot name={CSS.header} />\n              </header>\n            </div>\n            {this.renderContentTop()}\n            <div\n              class={{\n                [CSS.content]: true,\n                [CSS.contentNoFooter]: !this.hasFooter,\n              }}\n              ref={(el) => (this.modalContent = el)}\n            >\n              <slot name={SLOTS.content} />\n            </div>\n            {this.renderContentBottom()}\n            {this.renderFooter()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderFooter(): VNode {\n    return this.hasFooter ? (\n      <div class={CSS.footer} key=\"footer\">\n        <span class={CSS.back}>\n          <slot name={SLOTS.back} />\n        </span>\n        <span class={CSS.secondary}>\n          <slot name={SLOTS.secondary} />\n        </span>\n        <span class={CSS.primary}>\n          <slot name={SLOTS.primary} />\n        </span>\n      </div>\n    ) : null;\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return !this.closeButtonDisabled ? (\n      <button\n        aria-label={this.messages.close}\n        class={CSS.close}\n        key=\"button\"\n        onClick={this.handleCloseClick}\n        ref={(el) => (this.closeButtonEl = el)}\n        title={this.messages.close}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderStyle(): VNode {\n    if (!this.fullscreen && (this.cssWidth || this.cssHeight)) {\n      return (\n        <style>\n          {`.${CSS.container} {\n              ${this.docked && this.cssWidth ? `align-items: center !important;` : \"\"}\n            }\n            .${CSS.modal} {\n              block-size: ${this.cssHeight ? this.cssHeight : \"auto\"} !important;\n              ${this.cssWidth ? `inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.cssWidth ? `max-inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.docked ? `border-radius: var(--calcite-border-radius) !important;` : \"\"}\n            }\n            @media screen and (max-width: ${this.cssWidth}) {\n              .${CSS.container} {\n                ${this.docked ? `align-items: flex-end !important;` : \"\"}\n              }\n              .${CSS.modal} {\n                max-block-size: 100% !important;\n                inline-size: 100% !important;\n                max-inline-size: 100% !important;\n                min-inline-size: 100% !important;\n                margin: 0 !important;\n                ${!this.docked ? `block-size: 100% !important;` : \"\"}\n                ${!this.docked ? `border-radius: 0 !important;` : \"\"}\n                ${\n                  this.docked\n                    ? `border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0 !important;`\n                    : \"\"\n                }\n              }\n            }\n          `}\n        </style>\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  ignoreOpenChange = false;\n\n  @Element() el: HTMLCalciteModalElement;\n\n  modalContent: HTMLDivElement;\n\n  initialOverflowCSS: string;\n\n  private mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.handleMutationObserver(),\n  );\n\n  private cssVarObserver: MutationObserver = createObserver(\"mutation\", () => {\n    this.updateSizeCssVars();\n  });\n\n  titleId: string;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  focusTrap: FocusTrap;\n\n  closeButtonEl: HTMLButtonElement;\n\n  contentId: string;\n\n  @State() cssWidth: string | number;\n\n  @State() cssHeight: string | number;\n\n  @State() hasFooter = true;\n\n  @State() hasContentTop = false;\n\n  @State() hasContentBottom = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ModalMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\", { target: \"window\" })\n  handleEscape(event: KeyboardEvent): void {\n    if (this.open && !this.escapeDisabled && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.open = false;\n      event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteModalClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteModalOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's \"close\" button (the first focusable item).\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  /**\n   * Sets the scroll top of the component's content.\n   *\n   * @param top\n   * @param left\n   */\n  @Method()\n  async scrollContent(top = 0, left = 0): Promise<void> {\n    if (this.modalContent) {\n      if (this.modalContent.scrollTo) {\n        this.modalContent.scrollTo({ top, left, behavior: \"smooth\" });\n      } else {\n        this.modalContent.scrollTop = top;\n        this.modalContent.scrollLeft = left;\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.transitionEl.classList.add(CSS.openingActive);\n    this.calciteModalBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.transitionEl.classList.remove(CSS.openingIdle, CSS.openingActive);\n    this.calciteModalOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.transitionEl.classList.add(CSS.closingActive);\n    this.calciteModalBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.transitionEl.classList.remove(CSS.closingIdle, CSS.closingActive);\n    this.calciteModalClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  @Watch(\"open\")\n  toggleModal(value: boolean): void {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n\n    if (value) {\n      this.openModal();\n    } else {\n      this.closeModal();\n    }\n  }\n\n  @Watch(\"opened\")\n  handleOpenedChange(value: boolean): void {\n    const idleClass = value ? CSS.openingIdle : CSS.closingIdle;\n    this.transitionEl.classList.add(idleClass);\n    onToggleOpenCloseComponent(this);\n  }\n\n  private openEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calciteModalOpen\", this.openEnd);\n  };\n\n  private handleCloseClick = () => {\n    this.open = false;\n  };\n\n  private async openModal(): Promise<void> {\n    await componentOnReady(this.el);\n    this.el.addEventListener(\"calciteModalOpen\", this.openEnd);\n    this.opened = true;\n    const titleEl = getSlotted(this.el, SLOTS.header);\n    const contentEl = getSlotted(this.el, SLOTS.content);\n\n    this.titleId = ensureId(titleEl);\n    this.contentId = ensureId(contentEl);\n\n    if (!this.slottedInShell) {\n      if (totalOpenModals === 0) {\n        initialDocumentOverflowStyle = document.documentElement.style.overflow;\n      }\n\n      totalOpenModals++;\n      // use an inline style instead of a utility class to avoid global class declarations.\n      document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n    }\n  }\n\n  private handleOutsideClose = (): void => {\n    if (this.outsideCloseDisabled) {\n      return;\n    }\n\n    this.open = false;\n  };\n\n  closeModal = async (): Promise<void> => {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose(this.el);\n      } catch (_error) {\n        // close prevented\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n\n    totalOpenModals--;\n    this.opened = false;\n    this.removeOverflowHiddenClass();\n  };\n\n  private removeOverflowHiddenClass(): void {\n    document.documentElement.style.setProperty(\"overflow\", initialDocumentOverflowStyle);\n  }\n\n  private handleMutationObserver = (): void => {\n    this.updateFooterVisibility();\n    this.updateFocusTrapElements();\n  };\n\n  private updateFooterVisibility = (): void => {\n    this.hasFooter = !!getSlotted(this.el, [SLOTS.back, SLOTS.primary, SLOTS.secondary]);\n  };\n\n  private updateSizeCssVars = (): void => {\n    this.cssWidth = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-width\");\n    this.cssHeight = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-height\");\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n}\n","@import \"~@esri/calcite-design-tokens/dist/scss/core\";\n\n/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-modal-content-background: Specifies the background color of content placed in the component's `\"content\"` slot.\n * @prop --calcite-modal-content-padding: Specifies the padding of the component's `\"content\"` slot.\n * @prop --calcite-modal-scrim-background: Specifies the background color of the component's scrim.\n * @prop --calcite-modal-width: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Will never exceed the width of the viewport. Will not apply if `fullscreen` if set.\n * @prop --calcite-modal-height: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Will never exceed the height of the viewport. Will not apply if `fullscreen` if set.\n *\n */\n\n:host {\n  --calcite-modal-scrim-background: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n}\n\n:host {\n  @apply absolute flex inset-0 opacity-0 z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n  // the modal should always use a dark scrim, regardless of light / dark mode - matches value in global.scss\n  --calcite-modal-scrim-background-internal: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n}\n\n.content-top[hidden],\n.content-bottom[hidden] {\n  @apply hidden;\n}\n\n.container {\n  @apply text-color-2\n    fixed\n    inset-0\n    flex\n    items-center\n    justify-center\n    overflow-y-hidden\n    opacity-0\n    z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.3\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.4\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.1h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.n1\");\n}\n\n:host([scale=\"m\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.4\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.5\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.2h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.0\");\n}\n\n:host([scale=\"l\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.5\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.6\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.3h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.1\");\n}\n\n.scrim {\n  --calcite-scrim-background: var(--calcite-modal-scrim-background, var(--calcite-color-transparent-scrim));\n  @apply fixed inset-0 flex overflow-y-hidden;\n}\n\n.modal {\n  @apply shadow-2-sm\n    bg-foreground-1\n    pointer-events-none\n    float-none\n    m-6\n    box-border\n    flex\n    w-full\n    flex-col\n    overflow-hidden\n    rounded\n    opacity-0\n    z-modal;\n  -webkit-overflow-scrolling: touch;\n  visibility: hidden;\n  transition:\n    transform var(--calcite-internal-animation-timing-slow) $easing-function,\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n\n  --calcite-modal-hidden-position: translate3d(0, 20px, 0);\n  --calcite-modal-shown-position: translate3d(0, 0, 0);\n\n  &--opening {\n    &-idle {\n      transform: var(--calcite-modal-hidden-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-shown-position);\n    }\n  }\n\n  &--closing {\n    &-idle {\n      transform: var(--calcite-modal-shown-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-hidden-position);\n    }\n  }\n}\n\n:host([opened]) {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n}\n\n.container--open {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n  .modal {\n    @apply pointer-events-auto visible opacity-100;\n    transition:\n      transform var(--calcite-internal-animation-timing-slow) $easing-function,\n      visibility 0ms linear,\n      opacity var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-inline-size var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-block-size var(--calcite-internal-animation-timing-slow) $easing-function;\n    transition-delay: 0ms;\n  }\n}\n\n/**\n * Header\n */\n.header {\n  @apply bg-foreground-1\n    border-color-3\n    flex\n    min-w-0\n    max-w-full\n    rounded-t\n    border-0\n    border-b\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n}\n\n.close {\n  @apply text-color-3\n    transition-default\n    focus-base\n    order-2\n    m-0\n    cursor-pointer\n    appearance-none\n    border-none\n    bg-transparent;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-internal);\n  flex: 0 0 auto;\n  calcite-icon {\n    @apply pointer-events-none;\n    vertical-align: -2px;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n.title {\n  @apply order-1 flex min-w-0 items-center;\n  flex: 1 1 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n@include slotted(\"header\", \"*\") {\n  @apply text-color-1 m-0 font-normal;\n  font-size: var(--calcite-modal-title-text-internal);\n}\n\n/**\n * Content area\n */\n.content {\n  @apply relative box-border block h-full overflow-auto p-0;\n  background-color: var(--calcite-modal-content-background, theme(\"colors.background.foreground.1\"));\n  max-block-size: 100%;\n  padding: var(--calcite-modal-content-padding, var(--calcite-modal-padding-internal));\n}\n\n.content-top,\n.content-bottom {\n  @apply bg-foreground-1 border-color-3 border-solid border-0 z-header flex;\n  flex: 0 0 auto;\n  padding: var(--calcite-modal-padding-internal);\n}\n\n.content-top {\n  @apply min-w-0 max-w-full border-b;\n}\n\n.content-bottom {\n  @apply mt-auto box-border w-full justify-between border-t;\n}\n\n.content-top:not(.header ~ .content-top) {\n  @apply rounded-t;\n}\n\n.content-bottom:not(.content-bottom ~ .footer),\n.content--no-footer {\n  @apply rounded-b;\n}\n\n@include slotted(\"content\", \"*\") {\n  font-size: var(--calcite-modal-context-text-internal);\n}\n\n/**\n * Footer\n */\n.footer {\n  @apply bg-foreground-1\n    border-color-3\n    mt-auto\n    box-border\n    flex\n    w-full\n    justify-between\n    rounded-b\n    border-0\n    border-t\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n.footer--hide-back .back,\n.footer--hide-secondary .secondary {\n  @apply hidden;\n}\n\n.back {\n  @apply block;\n  margin-inline-end: auto;\n}\n\n.secondary {\n  @apply mx-1 block;\n}\n\nslot[name=\"primary\"] {\n  @apply block;\n}\n\n/**\n * Sizes\n */\n@mixin modal-size($size, $width) {\n  :host([width-scale=\"#{$size}\"]) .modal {\n    @apply max-h-full max-w-full;\n    inline-size: var(--calcite-modal-width, $width);\n    block-size: var(--calcite-modal-height, auto);\n  }\n\n  @media screen and (max-width: $width + 2 * $baseline) {\n    :host([width-scale=\"#{$size}\"]) {\n      .modal {\n        @apply m-0 h-full max-h-full w-full max-w-full;\n      }\n      .content {\n        flex: 1 1 auto;\n        max-block-size: unset;\n      }\n    }\n    :host([width-scale=\"#{$size}\"][docked]) .container {\n      align-items: flex-end;\n    }\n  }\n}\n\n:host([width=\"small\"]) .modal {\n  @apply w-auto;\n}\n\n@include modal-size(\"s\", 32rem);\n@include modal-size(\"m\", 48rem);\n@include modal-size(\"l\", 94rem);\n\n/**\n * Fullscreen\n */\n:host([fullscreen]) {\n  .modal {\n    @apply m-0 max-h-full max-w-full h-full w-full rounded-none;\n    --calcite-modal-hidden-position: translate3D(0, 20px, 0) scale(0.95);\n    --calcite-modal-shown-position: translate3D(0, 0, 0) scale(1);\n  }\n  .content {\n    @apply max-h-full;\n    flex: 1 1 auto;\n  }\n}\n\n:host([opened][fullscreen]) {\n  .header,\n  .footer,\n  .content-top,\n  .content-bottom {\n    border-radius: 0;\n  }\n}\n\n/**\n * Docked\n */\n:host([docked]) {\n  .modal {\n    block-size: var(--calcite-modal-height, auto);\n  }\n  .content {\n    @apply h-auto;\n    flex: 1 1 auto;\n  }\n}\n\n/**\n * Kinds\n */\n:host([kind=\"brand\"]) .modal {\n  @apply border-color-brand;\n}\n\n:host([kind=\"danger\"]) .modal {\n  @apply border-color-danger;\n}\n\n:host([kind=\"info\"]) .modal {\n  @apply border-color-info;\n}\n\n:host([kind=\"success\"]) .modal {\n  @apply border-color-success;\n}\n\n:host([kind=\"warning\"]) .modal {\n  @apply border-color-warning;\n}\n\n:host([kind=\"brand\"]),\n:host([kind=\"danger\"]),\n:host([kind=\"info\"]),\n:host([kind=\"success\"]),\n:host([kind=\"warning\"]) {\n  .modal {\n    @apply border-0 border-t-4 border-solid;\n  }\n  .header,\n  .content-top {\n    @apply rounded rounded-b-none;\n  }\n}\n\n/**\n * Tablet\n */\n@media screen and (max-width: $viewport-medium) {\n  @include slotted(\"header\", \"content-top\", \"*\") {\n    @apply text-1;\n  }\n  .footer,\n  .content-bottom {\n    @apply sticky bottom-0;\n  }\n}\n\n/**\n * Mobile\n */\n@media screen and (max-width: $viewport-small) {\n  .footer,\n  .content-bottom {\n    @apply flex-col;\n  }\n  .back,\n  .secondary {\n    @apply m-0 mb-1;\n  }\n}\n\n/**\n * Conditional styles for when Modal is slotted in Shell\n */\n\n.container.slotted-in-shell {\n  position: absolute;\n  pointer-events: auto;\n  calcite-scrim {\n    position: absolute;\n  }\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-loader-font-size: Specifies the font size of the loading percentage when type is `\"determinate\"`.\n * @prop --calcite-loader-size: The width and height of a non-inline loader.\n * @prop --calcite-loader-size-inline: The width and height of an inline loader\n * @prop --calcite-loader-padding : Specifies the padding of the loader.\n */\n\n@import \"../../assets/styles/animation\";\n\n$stroke-width: 3;\n$loader-scale: 54;\n$loader-circumference: ($loader-scale - (2 * $stroke-width)) * 3.14159;\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0;\n  }\n}\n\n:host {\n  @apply relative mx-auto hidden items-center justify-center opacity-100;\n  min-block-size: var(--calcite-loader-size);\n  font-size: var(--calcite-loader-font-size);\n  stroke: var(--calcite-color-brand);\n  stroke-width: $stroke-width;\n  fill: none;\n  transform: scale(1, 1);\n  animation: loader-color-shift scaleDuration(--calcite-internal-animation-timing-slow, 2) alternate-reverse infinite\n    linear;\n  padding-block: var(--calcite-loader-padding, theme(\"spacing.16\"));\n  will-change: contents;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.n2\");\n  --calcite-loader-size: theme(\"spacing.8\");\n  --calcite-loader-size-inline: theme(\"spacing.3\");\n}\n\n:host([scale=\"m\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.0\");\n  --calcite-loader-size: theme(\"spacing.16\");\n  --calcite-loader-size-inline: theme(\"spacing.4\");\n}\n\n:host([scale=\"l\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.2\");\n  --calcite-loader-size: theme(\"spacing.24\");\n  --calcite-loader-size-inline: theme(\"spacing.6\");\n}\n\n:host([no-padding]) {\n  @apply py-0;\n}\n\n:host {\n  @apply flex;\n}\n\n.loader__text {\n  @apply text-n2h\n  text-color-1\n  block\n  text-center;\n  margin-block-start: calc(var(--calcite-loader-size) + theme(\"spacing.6\"));\n}\n\n.loader__percentage {\n  @apply text-color-1 absolute block text-center;\n  font-size: var(--calcite-loader-font-size);\n  inline-size: var(--calcite-loader-size);\n  inset-inline-start: 50%;\n  margin-inline-start: calc(var(--calcite-loader-size) / 2 * -1);\n  line-height: 0.25;\n  transform: scale(1, 1);\n}\n\n.loader__svgs {\n  @apply absolute overflow-visible opacity-100;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  inset-inline-start: 50%;\n  margin-inline-start: calc(var(--calcite-loader-size) / 2 * -1);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-duration: scaleDuration(--calcite-internal-animation-timing-slow, 6.66);\n  animation-name: loader-clockwise;\n}\n\n.loader__svg {\n  @apply absolute top-0 origin-center overflow-visible;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n\n  &--1 {\n    animation-name: loader-offset-1;\n  }\n  &--2 {\n    animation-name: loader-offset-2;\n  }\n  &--3 {\n    animation-name: loader-offset-3;\n  }\n}\n\n:host([type=\"determinate\"]) {\n  @apply animate-none;\n  stroke: var(--calcite-color-border-3);\n  .loader__svgs {\n    @apply animate-none;\n  }\n  .loader__svg--3 {\n    @apply animate-none;\n    stroke: var(--calcite-color-brand);\n    stroke-dasharray: $loader-circumference;\n    transform: rotate(-90deg);\n    transition: all var(--calcite-internal-animation-timing-fast) linear;\n  }\n}\n\n:host([inline]) {\n  @apply relative m-0 animate-none stroke-current stroke-2 py-0;\n  block-size: var(--calcite-loader-size-inline);\n  min-block-size: var(--calcite-loader-size-inline);\n  inline-size: var(--calcite-loader-size-inline);\n  margin-inline-end: calc(var(--calcite-loader-size-inline) * 0.5);\n  vertical-align: calc(var(--calcite-loader-size-inline) * -1 * 0.2);\n}\n\n:host([inline]) .loader__svgs {\n  @apply top-0 m-0;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([inline]) .loader__svg {\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([complete]) {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity var(--calcite-internal-animation-timing-medium) linear 1000ms,\n    transform var(--calcite-internal-animation-timing-medium) linear 1000ms;\n}\n\n:host([complete]) .loader__svgs {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms,\n    transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;\n}\n\n:host([complete]) .loader__percentage {\n  color: theme(\"colors.brand\");\n  transform: scale(1.05, 1.05);\n  transform-origin: center;\n  transition:\n    color var(--calcite-internal-animation-timing-medium) linear,\n    transform var(--calcite-internal-animation-timing-medium) linear;\n}\n\n/**\n  Segment variables\n  - i         index (1-3)\n  - size      length of the segment (0 - 100)\n  - growth    how much the segment grows during the animation\n              (size + growth should not exceed 100)\n  - duration  how long the segment takes to rotate 360° (seconds)\n*/\n@mixin generateSegment($i, $size, $growth, $duration) {\n  $circumference: calc($loader-circumference / $loader-scale) * 100;\n  $length: ($size * 0.01) * $circumference;\n  $end: $length + ($growth * 0.01) * $circumference;\n\n  .loader__svg--#{$i} {\n    stroke-dasharray: $length $circumference - $end;\n    animation-duration: $duration;\n  }\n  @keyframes loader-offset-#{$i} {\n    0% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: $end $circumference - $end;\n      stroke-dashoffset: -$circumference * 0.5 - ($length - $end) * 0.5;\n    }\n    100% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: -$circumference;\n    }\n  }\n}\n\n@include generateSegment(1, 10, 40, scaleDuration(--calcite-internal-animation-timing-slow, 4.8));\n@include generateSegment(2, 20, 30, scaleDuration(--calcite-internal-animation-timing-slow, 6.4));\n@include generateSegment(3, 05, 45, scaleDuration(--calcite-internal-animation-timing-slow, 7.734));\n\n@keyframes loader-color-shift {\n  0% {\n    stroke: var(--calcite-color-brand);\n  }\n  33% {\n    stroke: var(--calcite-color-brand-press);\n  }\n  66% {\n    stroke: var(--calcite-color-brand-hover);\n  }\n  100% {\n    stroke: var(--calcite-color-brand);\n  }\n}\n\n@keyframes loader-clockwise {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\n\n@Component({\n  tag: \"calcite-loader\",\n  styleUrl: \"loader.scss\",\n  shadow: true,\n})\nexport class Loader {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays smaller and appears to the left of the text. */\n  @Prop({ reflect: true }) inline = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\";\n\n  /** The component's value. Valid only for `\"determinate\"` indicators. Percent complete of 100. */\n  @Prop() value = 0;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text = \"\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { el, inline, label, scale, text, type, value } = this;\n\n    const id = el.id || guid();\n    const radiusRatio = 0.45;\n    const size = inline ? this.getInlineSize(scale) : this.getSize(scale);\n    const radius = size * radiusRatio;\n    const viewbox = `0 0 ${size} ${size}`;\n    const isDeterminate = type === \"determinate\";\n    const circumference = 2 * radius * Math.PI;\n    const progress = (value / 100) * circumference;\n    const remaining = circumference - progress;\n    const valueNow = Math.floor(value);\n    const hostAttributes = {\n      \"aria-valuenow\": valueNow,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": 100,\n      complete: valueNow === 100,\n    };\n    const svgAttributes = { r: radius, cx: size / 2, cy: size / 2 };\n    const determinateStyle = { \"stroke-dasharray\": `${progress} ${remaining}` };\n    return (\n      <Host\n        aria-label={label}\n        id={id}\n        role=\"progressbar\"\n        {...(isDeterminate ? hostAttributes : {})}\n      >\n        <div class=\"loader__svgs\">\n          <svg aria-hidden=\"true\" class=\"loader__svg loader__svg--1\" viewBox={viewbox}>\n            <circle {...svgAttributes} />\n          </svg>\n          <svg aria-hidden=\"true\" class=\"loader__svg loader__svg--2\" viewBox={viewbox}>\n            <circle {...svgAttributes} />\n          </svg>\n          <svg\n            aria-hidden=\"true\"\n            class=\"loader__svg loader__svg--3\"\n            viewBox={viewbox}\n            {...(isDeterminate ? { style: determinateStyle } : {})}\n          >\n            <circle {...svgAttributes} />\n          </svg>\n        </div>\n        {text && <div class=\"loader__text\">{text}</div>}\n        {isDeterminate && <div class=\"loader__percentage\">{value}</div>}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLoaderElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Return the proper sizes based on the scale property\n   *\n   * @param scale\n   */\n  private getSize(scale: string) {\n    return {\n      s: 32,\n      m: 56,\n      l: 80,\n    }[scale];\n  }\n\n  private getInlineSize(scale: string) {\n    return {\n      s: 12,\n      m: 16,\n      l: 20,\n    }[scale];\n  }\n}\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["CSS","ICONS","SLOTS","totalOpenModals","initialDocumentOverflowStyle","Modal","proxyCustomElement","HTMLElement","ignoreOpenChange","mutationObserver","createObserver","this","handleMutationObserver","cssVarObserver","updateSizeCssVars","openTransitionProp","setTransitionEl","el","transitionEl","openEnd","setFocus","removeEventListener","handleCloseClick","open","handleOutsideClose","outsideCloseDisabled","closeModal","async","beforeClose","_error","requestAnimationFrame","opened","removeOverflowHiddenClass","updateFooterVisibility","updateFocusTrapElements","hasFooter","getSlotted","cssWidth","getComputedStyle","getPropertyValue","cssHeight","contentTopSlotChangeHandler","event","hasContentTop","slotChangeHasAssignedElement","contentBottomSlotChangeHandler","hasContentBottom","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","onMessagesChange","componentWillLoad","setUpMessages","setUpLoadableComponent","openModal","componentDidLoad","setComponentLoaded","connectedCallback","_this$mutationObserve","_this$cssVarObserver","observe","childList","subtree","attributeFilter","connectConditionalSlotComponent","connectLocalized","connectMessages","connectFocusTrap","disconnectedCallback","_this$mutationObserve2","_this$cssVarObserver2","disconnect","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","slottedInShell","render","h","Host","key","contentId","titleId","role","class","onClick","renderStyle","ref","renderCloseButton","name","renderContentTop","modalContent","renderContentBottom","renderFooter","hidden","onSlotchange","closeButtonDisabled","messages","close","closeButtonEl","title","icon","scale","getIconScale","fullscreen","concat","docked","effectiveLocaleChange","updateMessages","effectiveLocale","handleEscape","escapeDisabled","defaultPrevented","preventDefault","componentFocusable","focusFirstTabbable","scrollContent","top","arguments","length","undefined","left","scrollTo","behavior","scrollTop","scrollLeft","onBeforeOpen","classList","add","calciteModalBeforeOpen","emit","onOpen","remove","calciteModalOpen","onBeforeClose","calciteModalBeforeClose","onClose","calciteModalClose","toggleModal","value","handleOpenedChange","idleClass","onToggleOpenCloseComponent","componentOnReady","addEventListener","titleEl","contentEl","ensureId","document","documentElement","style","overflow","setProperty","observerOptions","component","processMutations","unobserve","mutations","forEach","_ref","target","forceUpdate","Loader","inline","label","text","type","id","guid","size","getInlineSize","getSize","radius","viewbox","isDeterminate","circumference","Math","PI","progress","remaining","valueNow","floor","hostAttributes","complete","svgAttributes","r","cx","cy","determinateStyle","viewBox","s","m","l","BREAKPOINTS","Scrim","resizeObserver","handleResize","handleDefaultSlotChange","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","_this$resizeObserver","_this$resizeObserver2","loading","loaderScale","getScale","_Math$min","min","clientHeight","clientWidth"],"sourceRoot":""}