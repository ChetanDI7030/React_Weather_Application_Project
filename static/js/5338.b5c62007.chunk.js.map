{"version":3,"file":"static/js/5338.b5c62007.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/handle/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/utils.ts"],"sourcesContent":["export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n};\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   */\n  @Prop() messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  @Prop() messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n      <span\n        aria-checked={this.disabled ? null : toAriaBoolean(this.selected)}\n        aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n        aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n        class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        ref={(el): void => {\n          this.handleButton = el;\n        }}\n        // role of radio is being applied to allow space key to select in screen readers\n        role=\"radio\"\n        tabIndex={this.disabled ? null : 0}\n        title={this.getTooltip()}\n      >\n        <calcite-icon icon={ICONS.drag} scale=\"s\" />\n      </span>\n    );\n  }\n}\n",":host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none;\n  color: theme(\"borderColor.color.input\");\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    @apply bg-foreground-2 text-color-1;\n  }\n  &:focus {\n    @apply text-color-1 focus-inset;\n  }\n  &--selected {\n    @apply bg-foreground-3 text-color-1;\n  }\n}\n\n@include disabled();\n\n@include base-component();\n",":host {\n  @apply flex flex-col bg-foreground-1;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n}\n\n:host([filter-hidden]),\n:host([closed]) {\n  @apply hidden;\n}\n\n.wrapper--bordered {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n@include disabled();\n\n.indent {\n  @apply flex\n    flex-col\n    border-solid\n    border-0\n    border-color-3;\n\n  margin-inline-start: var(--calcite-list-item-spacing-indent, theme(\"spacing.6\"));\n}\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1;\n  * {\n    @apply box-border;\n  }\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply flex flex-col;\n}\n\n.nested-container--hidden {\n  @apply hidden;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-normal\n    items-stretch\n    p-0;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.content-bottom {\n  @apply flex flex-col;\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex px-3 py-0;\n  color: theme(\"borderColor.color.input\");\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n\n  calcite-action,\n  calcite-handle {\n    @apply self-stretch;\n  }\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.actions-start,\n.actions-end {\n  @apply p-0;\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\n::slotted(calcite-list:empty) {\n  @apply border-t-0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\nconst listSelector = \"calcite-list\";\n\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /**\n   * Sets the item to display a border.\n   *\n   * @internal\n   */\n  @Prop() bordered = false;\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  handleOpenChange(): void {\n    this.emitCalciteInternalListItemToggle();\n  }\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemToggle: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        ref={(el) => (this.handleGridEl = el)}\n        role=\"gridcell\"\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        ref={(el) => (this.actionsStartEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        ref={(el) => (this.actionsEndEl = el)}\n        role=\"gridcell\"\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom } = this;\n    return (\n      <div class={CSS.contentBottom} hidden={!hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerHidden]: this.openable && !this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        ref={(el) => (this.contentEl = el)}\n        role=\"gridcell\"\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      filterHidden,\n      bordered,\n      disabled,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={{ [CSS.wrapper]: true, [CSS.wrapperBordered]: bordered }}>\n            <tr\n              aria-expanded={openable ? toAriaBoolean(open) : null}\n              aria-label={label}\n              aria-level={level}\n              aria-posinset={setPosition}\n              aria-selected={toAriaBoolean(selected)}\n              aria-setsize={setSize}\n              class={{\n                [CSS.container]: true,\n                [CSS.containerHover]: true,\n                [CSS.containerBorder]: showBorder,\n                [CSS.containerBorderSelected]: borderSelected,\n                [CSS.containerBorderUnselected]: borderUnselected,\n              }}\n              hidden={closed || filterHidden}\n              onFocus={this.focusCellNull}\n              onFocusin={this.emitInternalListItemActive}\n              onKeyDown={this.handleItemKeyDown}\n              ref={(el) => (this.containerEl = el)}\n              role=\"row\"\n              tabIndex={active ? 0 : -1}\n            >\n              {this.renderDragHandle()}\n              {this.renderSelected()}\n              {this.renderOpen()}\n              {this.renderActionsStart()}\n              {this.renderContentContainer()}\n              {this.renderActionsEnd()}\n            </tr>\n            {this.renderContentBottom()}\n          </div>\n          <div class={CSS.indent}>{this.renderDefaultContainer()}</div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemToggle(): void {\n    this.calciteInternalListItemToggle.emit();\n  }\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n","export const CSS = {\n  wrapper: \"wrapper\",\n  wrapperBordered: \"wrapper--bordered\",\n  container: \"container\",\n  indent: \"indent\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerHidden: \"nested-container--hidden\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n};\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","import { Build } from \"@stencil/core\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el) => el.matches(listSelector)),\n  ) as HTMLCalciteListElement[];\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = (\n    assignedElements.filter((el) => el?.matches(listItemGroupSelector)) as HTMLCalciteListItemGroupElement[]\n  )\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter((el) =>\n    el?.matches(listItemSelector),\n  ) as HTMLCalciteListItemElement[];\n\n  const listItemListChildren = (assignedElements.filter((el) => el?.matches(listSelector)) as HTMLCalciteListElement[])\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!Build.isBrowser) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n"],"names":["CSS","ICONS","SUBSTITUTIONS","Handle","proxyCustomElement","HTMLElement","handleKeyDown","event","this","disabled","key","selected","calciteHandleChange","emit","preventDefault","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","onMessagesChange","connectedCallback","connectInteractive","connectMessages","connectLocalized","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectMessages","disconnectLocalized","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","_this$handleButton","componentFocusable","handleButton","focus","getTooltip","label","messages","dragHandle","replace","dragHandleUntitled","type","setPosition","setSize","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","toString","render","h","toAriaBoolean","class","onBlur","onKeyDown","ref","el","role","tabIndex","title","icon","scale","focusMap","Map","ListItem","dragHandleSelectedChangeHandler","dragSelected","target","calciteListItemDragHandleChange","stopPropagation","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","closed","calciteListItemClose","handleContentSlotChange","hasCustomContent","slotChangeHasAssignedElement","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleDefaultSlotChange","handleOpenableChange","handleToggleClick","toggle","value","arguments","length","undefined","_this","open","calciteListItemToggle","handleItemClick","defaultPrevented","toggleSelected","shiftKey","selectionMode","calciteInternalListItemSelectMultiple","selectMultiple","calciteListItemSelect","handleItemKeyDown","composedPath","containerEl","openable","cells","getGridCells","currentIndex","findIndex","cell","includes","nextIndex","focusCell","prevIndex","calciteInternalFocusPreviousItem","focusCellNull","focusEl","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","parentListEl","set","gridCells","forEach","tableCell","removeAttribute","activeCellTestAttribute","setAttribute","indexOf","activeHandler","active","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleOpenChange","emitCalciteInternalListItemToggle","handleSelectedChange","calciteInternalListItemSelect","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","closest","level","getDepth","setSelectionDefaults","focusIndex","get","renderSelected","selectionAppearance","selectionContainer","selectionContainerSingle","onClick","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","renderDragHandle","dragDisabled","dragContainer","onFocusin","onCalciteHandleChange","renderOpen","dir","getElementDir","closedRTL","closedLTR","tooltip","collapse","expand","openContainer","renderActionsStart","actionsStart","hidden","name","SLOTS","onSlotchange","renderActionsEnd","closable","actionsEnd","appearance","close","text","renderContentStart","contentStart","renderCustomContent","customContent","content","renderContentEnd","contentEnd","renderContentBottom","contentBottom","renderDefaultContainer","nestedContainer","nestedContainerHidden","renderContentProperties","description","renderContentContainer","hasCenterContent","contentContainer","contentContainerSelectable","contentContainerHasCenterContent","filterHidden","bordered","showBorder","borderSelected","borderUnselected","Host","InteractiveContainer","wrapper","wrapperBordered","container","containerHover","containerBorder","containerBorderSelected","containerBorderUnselected","onFocus","indent","calciteInternalListItemToggle","calciteInternalListItemChange","slotEl","listItemChildren","getListItemChildren","listItemChildLists","getListItemChildLists","updateListItemChildren","filter","MAX_COLUMNS","blank","listSelector","listItemGroupSelector","listItemSelector","Array","from","assignedElements","flatten","matches","listItemGroupChildren","map","group","querySelectorAll","reduce","previousValue","currentValue","list","listItem","element","includeGroup","Build","isBrowser","expression","document","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength"],"sourceRoot":""}