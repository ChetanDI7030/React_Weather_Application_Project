"use strict";(self.webpackChunkweather_app=self.webpackChunkweather_app||[]).push([[9887],{76279:(t,e,r)=>{r.d(e,{$X:()=>y,Gy:()=>f,P5:()=>_,SW:()=>p,Tr:()=>m,VV:()=>o});r(19902);const n=(t,e,r)=>[e,r],s=(t,e,r)=>[e,r,t[2]],i=(t,e,r)=>[e,r,t[2],t[3]];function o(t){return t?{originPosition:"upper-left"===t.originPosition?"upperLeft":"lower-left"===t.originPosition?"lowerLeft":t.originPosition,scale:t.tolerance?[t.tolerance,t.tolerance]:[1,1],translate:null!=t.extent?[t.extent.xmin,t.extent.ymax]:[0,0]}:null}function a(t,e){let{scale:r,translate:n}=t;return Math.round((e-n[0])/r[0])}function l(t,e){let{scale:r,translate:n}=t;return Math.round((n[1]-e)/r[1])}function u(t,e){let{scale:r,translate:n}=t;return e*r[0]+n[0]}function h(t,e){let{scale:r,translate:n}=t;return n[1]-e*r[1]}function c(t,e,r){const n=new Array(r.length);if(!r.length)return n;const[s,i]=t.scale;let o=u(t,r[0][0]),a=h(t,r[0][1]);n[0]=e(r[0],o,a);for(let l=1;l<r.length;l++){const t=r[l];o+=t[0]*s,a-=t[1]*i,n[l]=e(t,o,a)}return n}function d(t,e,r){const n=new Array(r.length);for(let s=0;s<r.length;s++)n[s]=c(t,e,r[s]);return n}function f(t,e,r,n,s){return e.x=a(t,r.x),e.y=l(t,r.y),e!==r&&(n&&(e.z=r.z),s&&(e.m=r.m)),e}function p(t,e,r,o,a){return null!=r&&(e.points=function(t,e,r,o){return c(t,r?o?i:s:o?s:n,e)}(t,r.points,o,a)),e}function m(t,e,r,n,s){return null==r||(e.x=u(t,r.x),e.y=h(t,r.y),e!==r&&(n&&(e.z=r.z),s&&(e.m=r.m))),e}function y(t,e,r,o,a){return null!=r&&(e.rings=function(t,e,r,o){return d(t,r?o?i:s:o?s:n,e)}(t,r.rings,o,a)),e}function _(t,e,r,o,a){return null!=r&&(e.paths=function(t,e,r,o){return d(t,r?o?i:s:o?s:n,e)}(t,r.paths,o,a)),e}},19887:(t,e,r)=>{r.r(e),r.d(e,{default:()=>C});var n=r(4212),s=r(90632),i=r(13312),o=r(86729),a=(r(81806),r(78393),r(42294),r(2413),r(76279),r(31608),r(44135));r(15941),r(80963);class l{constructor(t,e,r){this.uid=t,this.geometry=e,this.attributes=r,this.visible=!0,this.objectId=null,this.centroid=null}}class u{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function h(t,e,r,n){if(null!==e&&void 0!==e&&e.size&&null!=r&&t)for(const s in t){if(!e.has(s))continue;const i=t[s];"string"==typeof i&&i.length>r&&(n(s),t[s]="")}}var c=r(98618);function d(t,e){return e}function f(t,e,r,n){switch(r){case 0:return _(t,e+n,0);case 1:return"lowerLeft"===t.originPosition?_(t,e+n,1):function(t,e,r){let{translate:n,scale:s}=t;return n[r]-e*s[r]}(t,e+n,1)}}function p(t,e,r,n){return 2===r?_(t,e,2):f(t,e,r,n)}function m(t,e,r,n){return 2===r?_(t,e,3):f(t,e,r,n)}function y(t,e,r,n){return 3===r?_(t,e,3):p(t,e,r,n)}function _(t,e,r){let{translate:n,scale:s}=t;return n[r]+e*s[r]}class g{constructor(t){this._options=t,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=d,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new u}finishFeatureResult(t){if(this._options.applyTransform&&(t.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!t.hasZ)return;const e=(0,o.N)(t.geometryType,this._options.sourceSpatialReference,t.spatialReference);if(null!=e)for(const r of t.features)e(r.geometry)}createSpatialReference(){return new i.A}addField(t,e){t.fields.push(a.A.fromJSON(e));const r=t.fields.map((t=>t.name));this._attributesConstructor=function(){for(const t of r)this[t]=null}}addFeature(t,e){const r=this._options.maxStringAttributeLength,n=this._options.maxStringAttributeFields;h(e.attributes,n,r,(r=>{const n=e.attributes[t.objectIdFieldName];null!=n&&this._missingAttributes.push({objectId:n,attribute:r})})),t.features.push(e)}addQueryGeometry(t,e){const{queryGeometry:r,queryGeometryType:n}=e,s=(0,c.Ch)(r.clone(),r,!1,!1,this._transform),i=(0,c.zv)(s,n,!1,!1);let o=null;switch(n){case"esriGeometryPoint":o="point";break;case"esriGeometryPolygon":o="polygon";break;case"esriGeometryPolyline":o="polyline";break;case"esriGeometryMultipoint":o="multipoint"}i.type=o,t.queryGeometryType=n,t.queryGeometry=i}prepareFeatures(t){var e;switch(this._transform=null!==(e=t.transform)&&void 0!==e?e:null,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&this._vertexDimension++,t.geometryType){case"point":this.addCoordinate=(t,e,r)=>this.addCoordinatePoint(t,e,r),this.createGeometry=t=>this.createPointGeometry(t);break;case"polygon":this.addCoordinate=(t,e,r)=>this._addCoordinatePolygon(t,e,r),this.createGeometry=t=>this._createPolygonGeometry(t);break;case"polyline":this.addCoordinate=(t,e,r)=>this._addCoordinatePolyline(t,e,r),this.createGeometry=t=>this._createPolylineGeometry(t);break;case"multipoint":this.addCoordinate=(t,e,r)=>this._addCoordinateMultipoint(t,e,r),this.createGeometry=t=>this._createMultipointGeometry(t);break;case"mesh":case"extent":break;default:(0,n.Xb)(t.geometryType)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new l((0,s.c)(),null,new this._attributesConstructor)}allocateCoordinates(){const t=this._lengths.reduce(((t,e)=>t+e),0);this._coordinateBuffer=new Float64Array(t*this._vertexDimension),this._coordinateBufferPtr=0}addLength(t,e){0===this._lengths.length&&(this._toAddInCurrentPath=e),this._lengths.push(e)}createPointGeometry(t){const e={type:"point",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return e.hasZ&&(e.z=0),e.hasM&&(e.m=0),e}addCoordinatePoint(t,e,r){const n=this._transform?this._applyTransform(this._transform,e,r,0):e;if(null!=n)switch(r){case 0:t.x=n;break;case 1:t.y=n;break;case 2:t.hasZ?t.z=n:t.m=n;break;case 3:t.m=n}}_transformPathLikeValue(t,e){let r=0;return e<=1&&(r=this._previousCoordinate[e],this._previousCoordinate[e]+=t),this._transform?this._applyTransform(this._transform,t,e,r):t}_addCoordinatePolyline(t,e,r){this._dehydratedAddPointsCoordinate(t.paths,e,r)}_addCoordinatePolygon(t,e,r){this._dehydratedAddPointsCoordinate(t.rings,e,r)}_addCoordinateMultipoint(t,e,r){0===r&&t.points.push([]);const n=this._transformPathLikeValue(e,r);t.points[t.points.length-1].push(n)}_createPolygonGeometry(t){return{type:"polygon",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{type:"polyline",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{type:"multipoint",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,r){0===r&&0==this._toAddInCurrentPath--&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const n=this._transformPathLikeValue(e,r),s=t[t.length-1],i=this._coordinateBuffer;if(i){if(0===r){const t=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;s.push(new Float64Array(i.buffer,t,this._vertexDimension))}i[this._coordinateBufferPtr++]=n}}_deriveApplyTransform(t){const{hasZ:e,hasM:r}=t;return e&&r?y:e?p:r?m:f}}var b=r(89122);class P{_parseFeatureQuery(t){var e;const r=new g(t.options),n=(0,b.m)(t.buffer,r),s={...n,spatialReference:null===(e=n.spatialReference)||void 0===e?void 0:e.toJSON(),fields:n.fields?n.fields.map((t=>t.toJSON())):void 0,missingAttributes:r.missingAttributes};return Promise.resolve(s)}}function C(){return new P}}}]);
//# sourceMappingURL=9887.b1101235.chunk.js.map